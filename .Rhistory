setwd("~/Data Science Specialization/Reproducible Research/Week2/RepData_PeerAssessment1")
activityData <- read.csv(file = "./activity/activity.csv", sep = ",", header = TRUE)
meanDailyActivityData <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)
require(lattice)
barchart(steps~date, data = meanDailyActivityData, xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart")
barchart(steps~date, data = meanDailyActivityData, xlab  = list(label="Date", cex=0.75), ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart")
barchart(steps~date, data = meanDailyActivityData, xlab  = list(label="Date", rot=90), ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart")
barchart(steps~date, data = meanDailyActivityData, xlab  = list(label="Date", scale=list(rot=90)), ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart")
barchart(steps~date, data = meanDailyActivityData, xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart", scales=list(x=list(rot=45))))
barchart(steps~date, data = meanDailyActivityData, xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart", scales=list(x=list(rot=45)))
barchart(steps~date, data = meanDailyActivityData, xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart", scales=list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)
require(lattice)
barchart(steps~date, data = meanDailyActivityData, xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart", scales=list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)
require(lattice)
barchart(steps~date, data = meanDailyActivityData, xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart", scales=list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)
require(lattice)
barchart(steps~date, data = meanDailyActivityData, xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart",
panel = function(x,y,...){
panel.barchart(x, y, ...)
panel.text(x, y, label = meanDailyActivityData$steps, pos = 3,cex = 1.2)
}, scales=list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)
require(lattice)
barchart(steps~date, data = meanDailyActivityData, xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart",
panel = function(x,y,...){
panel.barchart(x, y, ...)
panel.text(x, y, label = round(meanDailyActivityData$steps, digits = 2), pos = 3,cex = 0.5)
}, scales=list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)
require(lattice)
barchart(steps~date, data = meanDailyActivityData, xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart",
panel = function(x,y,...){
panel.barchart(x, y, ...)
panel.text(x, y, label = round(meanDailyActivityData$steps, digits = 2), pos = 3,cex = 0.4)
}, scales=list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)
require(lattice)
barchart(steps~date, data = meanDailyActivityData, xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart",
panel = function(x,y,...){
panel.barchart(x, y, ...)
panel.text(x, y, label = round(meanDailyActivityData$steps, digits = 2,), pos = 3,cex = 0.4,rot=90)
}, scales=list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)
require(lattice)
barchart(steps~date, data = meanDailyActivityData, xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart",
panel = function(x,y,...){
panel.barchart(x, y, ...)
panel.text(x, y, label = round(meanDailyActivityData$steps, digits = 2), pos = 3,cex = 0.4,rot=90)
}, scales=list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)
require(lattice)
barchart(steps~date, data = meanDailyActivityData, xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart",
panel = function(x,y,...){
panel.barchart(x, y, ...)
panel.text(x, y, label = round(meanDailyActivityData$steps, digits = 2), pos = 2,cex = 0.5)
}, scales=list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)
require(lattice)
barchart(steps~date, data = meanDailyActivityData, xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart",
panel = function(x,y,...){
panel.barchart(x, y, ...)
panel.text(x, y, label = round(meanDailyActivityData$steps, digits = 2), pos = 3,cex = 0.5)
}, scales=list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)
require(lattice)
barchart(steps~date, data = meanDailyActivityData, horiz = TRUE, xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart",
panel = function(x,y,...){
panel.barchart(x, y, ...)
panel.text(x, y, label = round(meanDailyActivityData$steps, digits = 2), pos = 3,cex = 0.5)
}, scales=list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)
require(lattice)
barchart(steps~date, data = meanDailyActivityData, horiz = FALSE, xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart",
panel = function(x,y,...){
panel.barchart(x, y, ...)
panel.text(x, y, label = round(meanDailyActivityData$steps, digits = 2), pos = 3,cex = 0.5, srt = 90)
}, scales=list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)
require(lattice)
barchart(steps~date, data = meanDailyActivityData, horiz = FALSE, xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart",
panel = function(x,y,...){
panel.barchart(x, y, ...)
panel.text(x, y, label = round(meanDailyActivityData$steps, digits = 2), pos = 4,cex = 0.8, srt = 90)
}, scales=list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)
require(lattice)
barchart(steps~date, data = meanDailyActivityData, horiz = FALSE, xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart",
panel = function(x,y,...){
panel.barchart(x, y, ...)
panel.text(x, y, label = round(meanDailyActivityData$steps, digits = 2), pos = 4,cex = 0.6, srt = 90)
}, scales=list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)
require(lattice)
barchart(steps~date, data = meanDailyActivityData, horiz = FALSE, xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart",
panel = function(x,y,...){
panel.barchart(x, y, ...)
panel.text(x, y, label = round(meanDailyActivityData$steps, digits = 2), pos = 3,cex = 0.6, srt = 90)
}, scales=list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)
require(lattice)
barchart(steps~date, data = meanDailyActivityData, horiz = FALSE, xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart",
panel = function(x,y,...){
panel.barchart(x, y, ...)
panel.text(x, y, label = round(meanDailyActivityData$steps, digits = 2), pos = 3,cex = 0.6, srt = 45)
}, scales=list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)
require(lattice)
barchart(steps~date, data = meanDailyActivityData, horiz = FALSE, xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart",
panel = function(x,y,...){
panel.barchart(x, y, ...)
panel.text(x, y, label = round(meanDailyActivityData$steps, digits = 2), pos = 3.5,cex = 0.6, srt = 90)
}, scales=list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)
require(lattice)
barchart(steps~date, data = meanDailyActivityData, horiz = FALSE, xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart",
panel = function(x,y,...){
panel.barchart(x, y, ...)
panel.text(x, y, label = "   " + round(meanDailyActivityData$steps, digits = 2), pos = 3.5,cex = 0.6, srt = 90)
}, scales=list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)
require(lattice)
barchart(steps~date, data = meanDailyActivityData, horiz = FALSE, xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart",
panel = function(x,y,...){
panel.barchart(x, y, ...)
panel.text(x, y, label = "   " + as.charactor(round(meanDailyActivityData$steps, digits = 2)), pos = 3.5,cex = 0.6, srt = 90)
}, scales=list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)
require(lattice)
barchart(steps~date, data = meanDailyActivityData, horiz = FALSE, xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart",
panel = function(x,y,...){
panel.barchart(x, y, ...)
panel.text(x, y, label = "   " + as.character(round(meanDailyActivityData$steps, digits = 2)), pos = 3.5,cex = 0.6, srt = 90)
}, scales=list(x=list(rot=90)))
?panel.text
?adj
meanDailyActivityData <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)
require(lattice)
barchart(steps~date, data = meanDailyActivityData, horiz = FALSE, xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart",
panel = function(x,y,...){
panel.barchart(x, y, ...)
panel.text(x, y, label = round(meanDailyActivityData$steps, digits = 2), pos = 3.5,cex = 0.6, srt = 90)
}, scales=list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)
require(lattice)
barchart(steps~date, data = meanDailyActivityData, horiz = FALSE, xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart",
panel = function(x,y,...){
panel.barchart(x, y, ...)
panel.text(x, y, label = round(meanDailyActivityData$steps, digits = 2), pos = 2,cex = 0.6, srt = 90)
}, scales=list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)
require(lattice)
barchart(steps~date, data = meanDailyActivityData, horiz = FALSE, xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart",
panel = function(x,y,...){
panel.barchart(x, y, ...)
panel.text(x, y, label = round(meanDailyActivityData$steps, digits = 2), pos = 4,cex = 0.6, srt = 90)
}, scales=list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)
require(lattice)
barchart(steps~date, data = meanDailyActivityData, horiz = FALSE, xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart",
panel = function(x,y,...){
panel.barchart(x, y, ...)
panel.text(x, y, label = round(meanDailyActivityData$steps, digits = 2), pos = 5,cex = 0.6, srt = 90)
}, scales=list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)
require(lattice)
barchart(steps~date, data = meanDailyActivityData, horiz = FALSE, xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart",
panel = function(x,y,...){
panel.barchart(x, y, ...)
panel.text(x, y, label = round(meanDailyActivityData$steps, digits = 2), pos = 2,cex = 0.6, srt = 90)
}, scales=list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)
require(lattice)
barchart(steps~date, data = meanDailyActivityData, horiz = FALSE, xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart",
panel = function(x,y,...){
panel.barchart(x, y, ...)
panel.text(x, y, label = round(meanDailyActivityData$steps, digits = 2), pos = 2,cex = 0.6, offset = 3, srt = 90)
}, scales=list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)
require(lattice)
barchart(steps~date, data = meanDailyActivityData, horiz = FALSE, xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart",
panel = function(x,y,...){
panel.barchart(x, y, ...)
panel.text(x, y, label = round(meanDailyActivityData$steps, digits = 2), pos = 2,cex = 0.6, offset = 2, srt = 90)
}, scales=list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)
require(lattice)
barchart(steps~date, data = meanDailyActivityData, horiz = FALSE, xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart",
panel = function(x,y,...){
panel.barchart(x, y, ...)
panel.text(x, y, label = round(meanDailyActivityData$steps, digits = 2), pos = 2,cex = 0.6, srt = 90)
}, scales=list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)
require(lattice)
barchart(steps~date, data = meanDailyActivityData, horiz = FALSE, xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart",
panel = function(x,y,...){
panel.barchart(x, y, ...)
panel.text(x, y, label = round(meanDailyActivityData$steps, digits = 2), pos = 2,cex = 0.4, srt = 90)
}, scales=list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)
require(lattice)
barchart(steps~date, data = meanDailyActivityData, horiz = FALSE, xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart",
panel = function(x,y,...){
panel.barchart(x, y, ...)
panel.text(x, y, label = round(meanDailyActivityData$steps, digits = 2), pos = 2,cex = 0.5, srt = 90)
}, scales=list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)
require(lattice)
barchart(steps~date, data = meanDailyActivityData, horiz = FALSE, xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart",
panel = function(x,y,...){
panel.barchart(x, y, ...)
panel.text(x, y, label = round(meanDailyActivityData$steps, digits = 2), pos = 2,cex = 0.6, srt = 90)
}, scales=list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)
require(lattice)
barchart(steps~date, data = meanDailyActivityData, horiz = FALSE, xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart",
panel = function(x,y,...){
panel.barchart(x, y, ...)
panel.text(x, y, label = round(meanDailyActivityData$steps, digits = 2), pos = 3,cex = 0.6, srt = 90)
}, scales=list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)
require(lattice)
barchart(steps~date, data = meanDailyActivityData, horiz = FALSE, xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart",
panel = function(x,y,...){
panel.barchart(x, y, ...)
panel.text(x, y, label = round(meanDailyActivityData$steps, digits = 2), pos = 3,cex = 0.5, srt = 90)
}, scales=list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)
require(lattice)
barchart(steps~date, data = meanDailyActivityData, horiz = FALSE, xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart",
panel = function(x,y,...){
panel.barchart(x, y, ...)
panel.text(x, y, label = round(meanDailyActivityData$steps, digits = 0), pos = 3,cex = 0.5, srt = 90)
}, scales=list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)
require(lattice)
barchart(steps~date, data = meanDailyActivityData, horiz = FALSE, xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart",
panel = function(x,y,...){
panel.barchart(x, y, ...)
panel.text(x, y, label = round(meanDailyActivityData$steps, digits = 0), pos = 3,cex = 0.55, srt = 90)
}, scales=list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)
require(lattice)
barchart(steps~date, data = meanDailyActivityData, horiz = FALSE, xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart",
panel = function(x,y,...){
panel.barchart(x, y, ...)
panel.text(x, y, label = round(meanDailyActivityData$steps, digits = 0), pos = 3,cex = 0.6, srt = 90)
}, scales=list(x=list(rot=90)))
xyplot(steps~date, data = meanDailyActivityData, type = 'b')
xyplot(steps~date, data = meanDailyActivityData, type = 'b', xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart",
+             panel = function(x,y,...){
+                 panel.barchart(x, y, ...)
+                 panel.text(x, y, label = round(meanDailyActivityData$steps, digits = 0), pos = 3,cex = 0.6, srt = 90)
+             }, scales=list(x=list(rot=90)))
xyplot(steps~date, data = meanDailyActivityData, type = 'b', xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart", panel = function(x,y,...){panel.barchart(x, y, ...) panel.text(x, y, label = round(meanDailyActivityData$steps, digits = 0), pos = 3,cex = 0.6, srt = 90)}, scales=list(x=list(rot=90)))
xyplot(steps~date, data = meanDailyActivityData, type = 'b', xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Line Chart", panel = function(x,y,...){panel.xyplot(x, y, ...) panel.text(x, y, label = round(meanDailyActivityData$steps, digits = 0), pos = 3,cex = 0.6, srt = 90)}, scales=list(x=list(rot=90)))
xyplot(steps~date, data = meanDailyActivityData, type = 'b', xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Line Chart")
xyplot(steps~date, data = meanDailyActivityData, type = 'b', xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Line Chart", scales = list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)
xyplot(steps~date, data = meanDailyActivityData, type = 'b', xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Line Chart", scales = list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)
xyplot(steps~date, data = meanDailyActivityData, type = 'b', xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Line Chart", scales = list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~date, data = activityData[activityData$interval == 5], mean, na.rm=TRUE)
meanDailyActivityData <- aggregate(steps~date, data = activityData[activityData$interval == 5,], mean, na.rm=TRUE)
xyplot(steps~date, data = meanDailyActivityData, type = 'l', xlab  = "Date", ylab = "Average Steps Per Day", main="5 Minute Interval Pattern Steps Per Day", scales = list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~interval, data = activityData, mean, na.rm=TRUE)
xyplot(steps~interval, data = meanDailyActivityData, type = 'l', xlab  = "Interval", ylab = "Average Steps", main="Pattern In Average Steps Per Interval", scales = list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)
meanDailyActivityData$type <- c(rep("mean",length(meanDailyActivityData)))
meanDailyActivityData <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)
meanDailyActivityData$type <- c(rep("mean",length(meanDailyActivityData$date)))
medianDailyActivityData <- aggregate(steps~date, data = activityData, median, na.rm=TRUE)
medianDailyActivityData$type <- c(rep("median",length(medianDailyActivityData$date)))
meanMedianDailyActivityData <- rbind(meanDailyActivityData,medianDailyActivityData)
require(lattice)
barchart(steps~date, groups = type, data = meanMedianDailyActivityData, horiz = FALSE, xlab  = "Date", ylab = "Average Steps Per Day", main="Average Steps Per Day Bar Chart",
panel = function(x,y,...){
panel.barchart(x, y, ...)
panel.text(x, y, label = round(meanDailyActivityData$steps, digits = 0), pos = 3,cex = 0.6, srt = 90)
}, scales=list(x=list(rot=90)))
aggregate(steps~date, data = activityData, median, na.rm=TRUE)
aggregate(steps~date, data = activityData, median)
#Calculates the total number of steps per day using aggreate function
totalDailyActivityData <- aggregate(steps~date, data = activityData, sum, na.rm=TRUE)
#Lattice bar chart to create a histogram of totals per day
require(lattice)
barchart(steps~date, groups = type, data = meanMedianDailyActivityData, horiz = FALSE, xlab  = "Date", ylab = "Total Steps", main="Total Steps Per Day",
panel = function(x,y,...){
panel.barchart(x, y, ...)
panel.text(x, y, label = round(meanDailyActivityData$steps, digits = 0), pos = 3,cex = 0.6, srt = 90)
}, scales=list(x=list(rot=90)))
totalDailyActivityData$meanSteps <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)
totalDailyActivityData$medianSteps <- aggregate(steps~date, data = activityData, median, na.rm=TRUE)
totalDailyActivityData[,c("date","meanSteps","medianSteps")]
#Calculates the total number of steps per day using aggreate function
totalDailyActivityData <- aggregate(steps~date, data = activityData, sum, na.rm=TRUE)
#Lattice bar chart to create a histogram of totals per day
require(lattice)
barchart(steps~date , data = totalDailyActivityData, horiz = FALSE, xlab  = "Date", ylab = "Total Steps", main="Total Steps Per Day",
panel = function(x,y,...){
panel.barchart(x, y, ...)
panel.text(x, y, label = round(meanDailyActivityData$steps, digits = 0), pos = 3,cex = 0.6, srt = 90)
}, scales=list(x=list(rot=90)))
totalDailyActivityData$meanSteps <- lapply(steps~date, data = activityData, mean, na.rm=TRUE)
#Calculates the total number of steps per day using aggreate function
totalDailyActivityData <- aggregate(steps~date, data = activityData, sum, na.rm=TRUE)
#Lattice bar chart to create a histogram of totals per day
require(lattice)
barchart(steps~date , data = totalDailyActivityData, horiz = FALSE, xlab  = "Date", ylab = "Total Steps", main="Total Steps Per Day",
panel = function(x,y,...){
panel.barchart(x, y, ...)
panel.text(x, y, label = totalDailyActivityData$steps, pos = 3,cex = 0.6, srt = 90)
}, scales=list(x=list(rot=90)))
totalDailyActivityData$meanSteps <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)[,"steps"]
totalDailyActivityData$medianSteps <- aggregate(steps~date, data = activityData, median, na.rm=TRUE)[,"steps"]
totalDailyActivityData[,c("date","meanSteps","medianSteps")]
#Calculates the total number of steps per day using aggreate function
totalDailyActivityData <- aggregate(steps~date, data = activityData, sum, na.rm=TRUE)
totalDailyActivityData$meanSteps <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)[,"steps"]
totalDailyActivityData$medianSteps <- aggregate(steps~date, data = activityData, median, na.rm=TRUE)[,"steps"]
names(totalDailyActivityData) = c("date","totalSteps","meanSteps","medianSteps")
totalDailyActivityData
#Calculates the total number of steps per day using aggreate function
totalDailyActivityData <- aggregate(steps~date, data = activityData, sum, na.rm=TRUE)
totalDailyActivityData$meanSteps <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)[,"steps"]
totalDailyActivityData$medianSteps <- aggregate(steps~date, data = activityData, median, na.rm=TRUE)[,"steps"]
totalDailyActivityData$meanSteps <- lapply(totalDailyActivityData$meanSteps, round, digits = 0)
names(totalDailyActivityData) = c("date","totalSteps","meanSteps","medianSteps")
totalDailyActivityData
#Calculates the total number of steps per day using aggreate function
totalDailyActivityData <- aggregate(steps~date, data = activityData, sum, na.rm=TRUE)
totalDailyActivityData$meanSteps <- aggregate(steps~date, data = activityData, mean, na.rm=TRUE)[,"steps"]
totalDailyActivityData$medianSteps <- aggregate(steps~date, data = activityData, median, na.rm=TRUE)[,"steps"]
totalDailyActivityData$meanSteps <- sapply(totalDailyActivityData$meanSteps, round, digits = 0)
names(totalDailyActivityData) = c("date","totalSteps","meanSteps","medianSteps")
totalDailyActivityData
#Lattice bar chart to create a histogram of totals per day
require(lattice)
barchart(steps~date , data = totalDailyActivityData, horiz = FALSE, xlab  = "Date", ylab = "Total Steps", main="Total Steps Per Day",
panel = function(x,y,...){
panel.barchart(x, y, ...)
panel.text(x, y, label = totalDailyActivityData$steps, pos = 3,cex = 0.6, srt = 90)
}, scales=list(x=list(rot=90)))
#Lattice bar chart to create a histogram of totals per day
require(lattice)
barchart(totalSteps~date , data = totalDailyActivityData, horiz = FALSE, xlab  = "Date", ylab = "Total Steps", main="Total Steps Per Day",
panel = function(x,y,...){
panel.barchart(x, y, ...)
panel.text(x, y, label = totalDailyActivityData$totalSteps, pos = 3,cex = 0.6, srt = 90)
}, scales=list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~interval, data = activityData, mean, na.rm=TRUE)
xyplot(steps~interval, data = meanDailyActivityData, type = 'l', xlab  = "Interval", ylab = "Average Steps", main="Pattern In Average Steps Per Interval", scales = list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~interval, data = activityData, mean, na.rm=TRUE)
xyplot(steps~interval, data = meanDailyActivityData, type = 'l', xlab  = "Interval", ylab = "Average Steps", main="Pattern In Average Steps Per Interval",panel = function(x,y,...){
panel.xyplot(x, y, ...)
panel.text(x, y, label = meanDailyActivityData[meanDailyActivityData$steps == max(meanDailyActivityData$steps),"interval"], pos = 3,cex = 0.6)
}, scales = list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~interval, data = activityData, mean, na.rm=TRUE)
xyplot(steps~interval, data = meanDailyActivityData, type = 'l', xlab  = "Interval", ylab = "Average Steps", main="Pattern In Average Steps Per Interval",panel = function(x,y,...){
panel.xyplot(x, y, ...)
if(meanDailyActivityData$steps == max(meanDailyActivityData$steps))
{
panel.text(x, y, label = meanDailyActivityData[meanDailyActivityData$steps == max(meanDailyActivityData$steps),"interval"], pos = 3,cex = 0.6)}
}, scales = list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~interval, data = activityData, mean, na.rm=TRUE)
xyplot(steps~interval, data = meanDailyActivityData, type = 'l', xlab  = "Interval", ylab = "Average Steps", main="Pattern In Average Steps Per Interval",panel = function(x,y,...){
panel.xyplot(x, y, ...)
if(meanDailyActivityData$interval == meanDailyActivityData[meanDailyActivityData$steps == max(meanDailyActivityData$steps),"interval"])
{
panel.text(x, y, label = meanDailyActivityData[meanDailyActivityData$steps == max(meanDailyActivityData$steps),"interval"], pos = 3,cex = 0.6)}
}, scales = list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~interval, data = activityData, mean, na.rm=TRUE)
xyplot(steps~interval, data = meanDailyActivityData, type = 'l', xlab  = "Interval", ylab = "Average Steps", main="Pattern In Average Steps Per Interval",panel = function(x,y,...){
pnl = panel.number()
panel.xyplot(x, y, ...)
if(pnl == meanDailyActivityData[meanDailyActivityData$steps == max(meanDailyActivityData$steps),"interval"])
{
panel.text(x, y, label = meanDailyActivityData[meanDailyActivityData$steps == max(meanDailyActivityData$steps),"interval"], pos = 3,cex = 0.6)}
}, scales = list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~interval, data = activityData, mean, na.rm=TRUE)
xyplot(steps~interval, data = meanDailyActivityData, type = 'l', xlab  = "Interval", ylab = "Average Steps", main="Pattern In Average Steps Per Interval",panel = function(x,y,...){
panel.xyplot(x, y, ...)
panel.abline(a=meanDailyActivityData[meanDailyActivityData$steps=max(meanDailyActivityData$steps),"interval"],label=meanDailyActivityData[meanDailyActivityData$steps=max(meanDailyActivityData$steps),"interval"])
meanDailyActivityData <- aggregate(steps~interval, data = activityData, mean, na.rm=TRUE)
xyplot(steps~interval, data = meanDailyActivityData, type = 'l', xlab  = "Interval", ylab = "Average Steps", main="Pattern In Average Steps Per Interval",panel = function(x,y,...){
panel.xyplot(x, y, ...)
panel.abline(a=meanDailyActivityData[meanDailyActivityData$steps==max(meanDailyActivityData$steps),"interval"],label=meanDailyActivityData[meanDailyActivityData$steps==max(meanDailyActivityData$steps),"interval"])
}, scales = list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~interval, data = activityData, mean, na.rm=TRUE)
xyplot(steps~interval, data = meanDailyActivityData, type = 'l', xlab  = "Interval", ylab = "Average Steps", main="Pattern In Average Steps Per Interval",panel = function(x,y,...){
panel.xyplot(x, y, ...)
panel.ablineq(a=meanDailyActivityData[meanDailyActivityData$steps==max(meanDailyActivityData$steps),"interval"],label=meanDailyActivityData[meanDailyActivityData$steps==max(meanDailyActivityData$steps),"interval"])
}, scales = list(x=list(rot=90)))
?panel.abline
meanDailyActivityData <- aggregate(steps~interval, data = activityData, mean, na.rm=TRUE)
xyplot(steps~interval, data = meanDailyActivityData, type = 'l', xlab  = "Interval", ylab = "Average Steps", main="Pattern In Average Steps Per Interval",panel = function(x,y,...){
panel.xyplot(x, y, ...)
panel.abline(a=meanDailyActivityData[meanDailyActivityData$steps==max(meanDailyActivityData$steps),"interval"],label=meanDailyActivityData[meanDailyActivityData$steps==max(meanDailyActivityData$steps),"interval"])
}, scales = list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~interval, data = activityData, mean, na.rm=TRUE)
xyplot(steps~interval, data = meanDailyActivityData, type = 'l', xlab  = "Interval", ylab = "Average Steps", main="Pattern In Average Steps Per Interval",panel = function(x,y,...){
panel.xyplot(x, y, ...)
panel.abline(a=meanDailyActivityData[meanDailyActivityData$steps==max(meanDailyActivityData$steps),"interval"],label=meanDailyActivityData[meanDailyActivityData$steps==max(meanDailyActivityData$steps),"interval"], col = "red")
}, scales = list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~interval, data = activityData, mean, na.rm=TRUE)
xyplot(steps~interval, data = meanDailyActivityData, type = 'l', xlab  = "Interval", ylab = "Average Steps", main="Pattern In Average Steps Per Interval",panel = function(x,y,...){
panel.xyplot(x, y, ...)
panel.abline(h=y[ which(x==0.5) ], lty = "dotted", col = "black")
}, scales = list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~interval, data = activityData, mean, na.rm=TRUE)
xyplot(steps~interval, data = meanDailyActivityData, type = 'l', xlab  = "Interval", ylab = "Average Steps", main="Pattern In Average Steps Per Interval",panel = function(x,y,...){
panel.xyplot(x, y, ...)
panel.abline(h=y[ which(x==5) ], lty = "dotted", col = "black")
}, scales = list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~interval, data = activityData, mean, na.rm=TRUE)
xyplot(steps~interval, data = meanDailyActivityData, type = 'l', xlab  = "Interval", ylab = "Average Steps", main="Pattern In Average Steps Per Interval",panel = function(x,y,...){
panel.xyplot(x, y, ...)
panel.abline(v=x[ which(y==5) ], lty = "dotted", col = "black")
}, scales = list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~interval, data = activityData, mean, na.rm=TRUE)
xyplot(steps~interval, data = meanDailyActivityData, type = 'l', xlab  = "Interval", ylab = "Average Steps", main="Pattern In Average Steps Per Interval",panel = function(x,y,...){
panel.xyplot(x, y, ...)
panel.abline(v=y[ which(x==5) ], lty = "dotted", col = "black")
}, scales = list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~interval, data = activityData, mean, na.rm=TRUE)
xyplot(steps~interval, data = meanDailyActivityData, type = 'l', xlab  = "Interval", ylab = "Average Steps", main="Pattern In Average Steps Per Interval",panel = function(x,y,...){
panel.xyplot(x, y, ...)
panel.abline(v=y[ which(x==meanDailyActivityData[meanDailyActivityData$steps ==max(meanDailyActivityData$steps),"interval"]) ], lty = "dotted", col = "black")
}, scales = list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~interval, data = activityData, mean, na.rm=TRUE)
xyplot(steps~interval, data = meanDailyActivityData, type = 'l', xlab  = "Interval", ylab = "Average Steps", main="Pattern In Average Steps Per Interval",panel = function(x,y,...){
panel.xyplot(x, y, ...)
panel.abline(h=y[ which(x==meanDailyActivityData[meanDailyActivityData$steps ==max(meanDailyActivityData$steps),"interval"]) ], lty = "dotted", col = "black")
}, scales = list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~interval, data = activityData, mean, na.rm=TRUE)
xyplot(steps~interval, data = meanDailyActivityData, type = 'l', xlab  = "Interval", ylab = "Average Steps", main="Pattern In Average Steps Per Interval",panel = function(x,y,...){
panel.xyplot(x, y, ...)
panel.abline(h=y[ which(x==meanDailyActivityData[meanDailyActivityData$steps ==max(meanDailyActivityData$steps),"interval"]) ], lty = "dotted", col = "black", label = meanDailyActivityData[meanDailyActivityData$steps ==max(meanDailyActivityData$steps),"interval"])
}, scales = list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~interval, data = activityData, mean, na.rm=TRUE)
xyplot(steps~interval, data = meanDailyActivityData, type = 'l', xlab  = "Interval", ylab = "Average Steps", main="Pattern In Average Steps Per Interval",panel = function(x,y,...){
panel.xyplot(x, y, ...)
panel.abline(v=x[ which(y==max(meanDailyActivityData$steps))], lty = "dotted", col = "black", label = meanDailyActivityData[meanDailyActivityData$steps ==max(meanDailyActivityData$steps),"interval"])
}, scales = list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~interval, data = activityData, mean, na.rm=TRUE)
xyplot(steps~interval, data = meanDailyActivityData, type = 'l', xlab  = "Interval", ylab = "Average Steps", main="Pattern In Average Steps Per Interval",panel = function(x,y,...){
panel.xyplot(x, y, ...)
panel.abline(v=x[ which(y==max(meanDailyActivityData$steps))], lty = "dotted", col = "black", panel.text(meanDailyActivityData[meanDailyActivityData$steps ==max(meanDailyActivityData$steps),"interval"])
)}, scales = list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~interval, data = activityData, mean, na.rm=TRUE)
xyplot(steps~interval, data = meanDailyActivityData, type = 'l', xlab  = "Interval", ylab = "Average Steps", main="Pattern In Average Steps Per Interval",panel = function(x,y,...){
panel.xyplot(x, y, ...)
panel.abline(v=x[ which(y==max(meanDailyActivityData$steps))], lty = "dotted", col = "black", panel.text(x, y, label = meanDailyActivityData[meanDailyActivityData$steps ==max(meanDailyActivityData$steps),"interval"])
)}, scales = list(x=list(rot=90)))
meanDailyActivityData <- aggregate(steps~interval, data = activityData, mean, na.rm=TRUE)
xyplot(steps~interval, data = meanDailyActivityData, type = 'l', xlab  = "Interval", ylab = "Average Steps", main="Pattern In Average Steps Per Interval",panel = function(x,y,...){
panel.xyplot(x, y, ...)
panel.abline(v=x[ which(y==max(meanDailyActivityData$steps))], lty = 1, col = "black", label = meanDailyActivityData[meanDailyActivityData$steps ==max(meanDailyActivityData$steps),"interval"])
}, scales = list(x=list(rot=90)))
